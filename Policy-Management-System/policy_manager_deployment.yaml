apiVersion: v1
kind: Namespace
metadata:
  name: microservices

---
apiVersion: v1
kind: Secret
metadata:
  name: onos-credentials
  namespace: microservices
type: Opaque
stringData:
  SDN_CONTROLLER_USER: "onos"
  SDN_CONTROLLER_PASS: "rocks"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: policy-manager
  namespace: microservices
  labels:
    app: policy-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: policy-manager
  template:
    metadata:
      labels:
        app: policy-manager
    spec:
      nodeSelector:
        kubernetes.io/hostname: cloudnode         # stay in cloud layer
      containers:
      - name: policy-manager
        image: henok28/policy-manager:v1.0
        imagePullPolicy: IfNotPresent
        env:
        - name: SDN_CONTROLLER_URL
          value: "http://onos-controller.micro-onos.svc.cluster.local:8181/onos/v1"
        - name: SDN_CONTROLLER_USER
          valueFrom:
            secretKeyRef:
              name: onos-credentials
              key: SDN_CONTROLLER_USER
        - name: SDN_CONTROLLER_PASS
          valueFrom:
            secretKeyRef:
              name: onos-credentials
              key: SDN_CONTROLLER_PASS
        ports:
        - containerPort: 5002
          name: http
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 10
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi

---
apiVersion: v1
kind: Service
metadata:
  name: policy-manager
  namespace: microservices
spec:
  selector:
    app: policy-manager
  ports:
  - port: 5002
    targetPort: http
    protocol: TCP
  type: ClusterIP
